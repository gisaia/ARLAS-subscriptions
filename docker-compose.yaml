version: '3'

services:

  ########################
  # third-party backends #
  ########################

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: "zookeeper"
    ports:
      - 2181:2181

  kafka:
    image: wurstmeister/kafka:2.11-1.1.1
    container_name: "kafka"
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      LOG4J_LOGGER_KAFKA: INFO

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION:-7.9.2}
    container_name: "elasticsearch"
    environment:
      - discovery.type=single-node
      - cluster.name=elasticsearch
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - 9200:9200

  mongodb:
    image: mongo:3.4
    container_name: "mongodb"
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongouser
      MONGO_INITDB_ROOT_PASSWORD: secret

  #########
  # ARLAS #
  #########

  arlas-server:
    image: gisaia/arlas-server:${ARLAS_VERSION:-19.7.5}
    container_name: "arlas-server"
    ports:
      - 9999:9999
    depends_on:
      - elasticsearch
    environment:
      - ARLAS_ELASTIC_NODES=elasticsearch:9200
    command: ["/opt/app/wait-for-elasticsearch.sh"]

  arlas-subscriptions-matcher:
    build:
      context: .
      dockerfile: Dockerfile-matcher
    image: gisaia/arlas-subscriptions-matcher:${ARLAS_SUBSCRIPTIONS_VERSION:-latest}
    container_name: "arlas-subscriptions-matcher"
    depends_on:
      - arlas-server
      - kafka
    environment:
      - KAFKA_BROKERS=kafka:9092
      - ARLAS_ELASTIC_NODES=elasticsearch:9200
      - ARLAS_SERVER=arlas-server:9999
      - ARLAS_SERVER_BASE_PATH=http://arlas-server:9999/arlas
      - ARLAS_SUBSCRIPTIONS_BASE_PATH=http://arlas-server:9999/arlas
      - ARLAS_SUB_IDENTITY_HEADER=${ARLAS_SUB_IDENTITY_HEADER:-}
    ports:
      - 9997:9998    
    command: ["/opt/app/wait-for-deps.sh $$KAFKA_BROKERS $$ARLAS_ELASTIC_NODES $$ARLAS_SERVER"]
    healthcheck:
      test: curl http://localhost:9998/admin/healthcheck | grep -v "\"healthy\":false" || exit 1
      interval: 30s
      timeout: 30s
      retries: 3

  arlas-subscriptions-manager:
    build:
      context: .
      dockerfile: Dockerfile-manager
    image: gisaia/arlas-subscriptions-manager:${ARLAS_SUBSCRIPTIONS_VERSION:-latest}
    container_name: "arlas-subscriptions-manager"
    depends_on:
      - mongodb
      - elasticsearch
    environment:
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MONGO_USERNAME=${MONGO_USERNAME:-mongouser}
      - MONGO_PASSWORD=${MONGO_PASSWORD:-secret}
      - MONGO_AUTH_DATABASE=${MONGO_AUTH_DATABASE:-admin}
      - ARLAS_SUB_ELASTIC_NODES=elasticsearch:9200
      - ARLAS_SUB_ELASTIC_INDEX=subs
      - ARLAS_SUB_TRIG_SCHEM_PATH=${ARLAS_SUB_TRIG_SCHEM_PATH}
      - ARLAS_SUB_IDENTITY_HEADER=${ARLAS_SUB_IDENTITY_HEADER:-}
    volumes:
      - ${ARLAS_SUB_TRIG_SCHEM_PATH_LOCAL}:${ARLAS_SUB_TRIG_SCHEM_PATH}
    ports:
      - 9998:9998
    command: ["/opt/app/wait-for-deps.sh $$MONGO_HOST:$$MONGO_PORT $$ARLAS_SUB_ELASTIC_NODES "]
    healthcheck:
      test: curl http://localhost:9998/admin/healthcheck | grep -v "\"healthy\":false" || exit 1
      interval: 30s
      timeout: 30s
      retries: 3
