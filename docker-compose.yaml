version: '3'

services:

  ########################
  # third-party backends #
  ########################

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: "zookeeper"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
    - 22181:2181

  kafka:
    # Kafka 3.0
    image: confluentinc/cp-kafka:7.0.1
    container_name: "kafka"
    depends_on:
      - zookeeper
    ports:
      - 29092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
      LOG4J_LOGGER_KAFKA: INFO

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION:-7.17.6}
    container_name: "elasticsearch"
    environment:
      - discovery.type=single-node
      - cluster.name=elasticsearch
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - 9200:9200

  mongodb:
    image: mongo:3.4
    container_name: "mongodb"
    ports:
      - 27017:27017
    volumes:
      - ./scripts/file.key:/data/file.key
      - ./scripts/rs-init.sh:/scripts/rs-init.sh
    links:
      - mongo2
      - mongo3
    command:
      - /bin/sh
      - -c
      - |
        chmod 400 /data/file.key
        mongod --auth --keyFile /data/file.key --replSet dbrs

  mongo2:
    image: mongo:3.4
    container_name: mongo2
    ports:
      - 27019:27017
    volumes:
      - ./scripts/file.key:/data/file.key
    command:
      - /bin/sh
      - -c
      - |
        chmod 400 /data/file.key
        mongod --auth --keyFile /data/file.key --replSet dbrs

  mongo3:
    image: mongo:3.4
    container_name: mongo3
    ports:
      - 27022:27017
    volumes:
      - ./scripts/file.key:/data/file.key
    command:
      - /bin/sh
      - -c
      - |
        chmod 400 /data/file.key
        mongod --auth --keyFile /data/file.key --replSet dbrs

  #########
  # ARLAS #
  #########

  arlas-server:
    image: gisaia/arlas-server:${ARLAS_VERSION:-23.0.6}
    container_name: "arlas-server"
    ports:
      - 9999:9999
    depends_on:
      - elasticsearch
    environment:
      - ARLAS_ELASTIC_NODES=${ARLAS_ELASTIC_NODES:-elasticsearch:9200}
      - ARLAS_ELASTIC_ENABLE_SSL="${ARLAS_ELASTIC_ENABLE_SSL:-false}"
      - ARLAS_ELASTIC_CREDENTIALS="${ARLAS_ELASTIC_CREDENTIALS}"
      - ARLAS_ELASTIC_SKIP_MASTER="${ARLAS_ELASTIC_SKIP_MASTER:-true}"

  arlas-subscriptions-matcher:
    build:
      context: .
      dockerfile: Dockerfile-matcher
    image: gisaia/arlas-subscriptions-matcher:${ARLAS_SUBSCRIPTIONS_VERSION:-latest}
    container_name: "arlas-subscriptions-matcher"
    depends_on:
      - arlas-server
      - kafka
    environment:
      - KAFKA_BROKERS=kafka:9092
      - ARLAS_ELASTIC_NODES=elasticsearch:9200
      - ARLAS_SERVER=arlas-server:9999
      - ARLAS_SERVER_BASE_PATH=http://arlas-server:9999/arlas
      - ARLAS_SUBSCRIPTIONS_BASE_PATH=http://arlas-server:9999/arlas
      - ARLAS_SUB_IDENTITY_HEADER=${ARLAS_SUB_IDENTITY_HEADER:-}
    ports:
      - 9997:9998    
    healthcheck:
      test: curl http://localhost:9998/admin/healthcheck | grep -v "\"healthy\":false" || exit 1
      interval: 30s
      timeout: 30s
      retries: 3

  arlas-subscriptions-manager:
    build:
      context: .
      dockerfile: Dockerfile-manager
    image: gisaia/arlas-subscriptions-manager:${ARLAS_SUBSCRIPTIONS_VERSION:-latest}
    container_name: "arlas-subscriptions-manager"
    depends_on:
      - mongodb
      - elasticsearch
    environment:
      - MONGO_HOST=mongodb:27017,mongo2:27017,mongo3:27017
      - MONGO_USERNAME=${MONGO_USERNAME:-mongouser}
      - MONGO_PASSWORD=${MONGO_PASSWORD:-secret}
      - MONGO_AUTH_DATABASE=${MONGO_AUTH_DATABASE:-admin}
      - ARLAS_SUB_ELASTIC_NODES=elasticsearch:9200
      - ARLAS_SUB_ELASTIC_INDEX=subs
      - ARLAS_SUB_TRIG_SCHEM_PATH=${ARLAS_SUB_TRIG_SCHEM_PATH}
      - ARLAS_SUB_IDENTITY_HEADER=${ARLAS_SUB_IDENTITY_HEADER:-}
    volumes:
      - ${ARLAS_SUB_TRIG_SCHEM_PATH_LOCAL}:${ARLAS_SUB_TRIG_SCHEM_PATH}
    ports:
      - 9998:9998
    healthcheck:
      test: curl http://localhost:9998/admin/healthcheck | grep -v "\"healthy\":false" || exit 1
      interval: 30s
      timeout: 30s
      retries: 3
